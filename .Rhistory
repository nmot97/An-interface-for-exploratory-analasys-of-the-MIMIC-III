layout(title= "Length of stay"
)
}
else if (input$code9 == "nervous") {
plot_ly(
data = temp6,
y = ~LOS,
type = "box"
) %>%
layout(title= "Length of stay"
)
}
else if (input$code9 == "circulatory") {
plot_ly(
data = temp7,
y = ~LOS,
type = "box"
) %>%
layout(title= "Length of stay"
)
}
else if (input$code9 == "respiratory") {
plot_ly(
data = temp8,
y = ~LOS,
type = "box"
) %>%
layout(title= "Length of stay"
)
}
else if (input$code9 == "digestive") {
plot_ly(
data = temp9,
y = ~LOS,
type = "box"
) %>%
layout(title= "Length of stay"
)
}
else if (input$code9 == "genitourinary") {
plot_ly(
data = temp10,
y = ~LOS,
type = "box"
) %>%
layout(title= "Length of stay"
)
}
else if (input$code9 == "pregnancy") {
plot_ly(
data = temp11,
y = ~LOS,
type = "box"
) %>%
layout(title= "Length of stay"
)
}
else if (input$code9 == "skin") {
plot_ly(
data = temp12,
y = ~LOS,
type = "box"
) %>%
layout(title= "Length of stay"
)
}
else if (input$code9 == "muscle") {
plot_ly(
data = temp13,
y = ~LOS,
type = "box"
) %>%
layout(title= "Length of stay"
)
}
else if (input$code9 == "anomalies") {
plot_ly(
data = temp14,
y = ~LOS,
type = "box"
) %>%
layout(title= "Length of stay"
)
}
else if (input$code9 == "perinatal") {
plot_ly(
data = temp15,
y = ~LOS,
type = "box"
) %>%
layout(title= "Length of stay"
)
}
else if (input$code9 == "signs") {
plot_ly(
data = temp16,
y = ~LOS,
type = "box"
) %>%
layout(title= "Length of stay"
)
}
else if (input$code9 == "poison") {
plot_ly(
data = temp17,
y = ~LOS,
type = "box"
) %>%
layout(title= "Length of stay"
)
}
else if (input$code9 == "v1") {
plot_ly(
data = temp18,
y = ~LOS,
type = "box"
) %>%
layout(title= "Length of stay"
)
}
else if (input$code9 == "v2") {
plot_ly(
data = temp19,
y = ~LOS,
type = "box"
) %>%
layout(title= "Length of stay"
)
}
})
output$icddiagnoses <- renderPlotly({
if(input$code9 == "blood"){
counts <- as.data.frame(table(blood289$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "neoplasm") {
counts <- as.data.frame(table(neoplasms239$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "parasit") {
counts <- as.data.frame(table(infections139$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "endocrine") {
counts <- as.data.frame(table(endocrine279$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "mental") {
counts <- as.data.frame(table(mental319$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "nervous") {
counts <- as.data.frame(table(nervous389$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "circulatory") {
counts <- as.data.frame(table(circulatory459$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "respiratory") {
counts <- as.data.frame(table(respiratory519$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "digestive") {
counts <- as.data.frame(table(digestive579$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "genitourinary") {
counts <- as.data.frame(table(genitourinary629$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "pregnancy") {
counts <- as.data.frame(table(pregnancy679$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "skin") {
counts <- as.data.frame(table(skin709$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "muscle") {
counts <- as.data.frame(table(muscle739$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "anomalies") {
counts <- as.data.frame(table(congenital759$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "perinatal") {
counts <- as.data.frame(table(perinatal779$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "signs") {
counts <- as.data.frame(table(symptoms799$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "poison") {
counts <- as.data.frame(table(injury999$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "v1") {
counts <- as.data.frame(table(v$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "v2") {
counts <- as.data.frame(table(e$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "Range of ICD9 Codes" ,
categoryorder = "total descending")
)
}
})
output$summary2 <- renderPrint({
if (input$code92 == "parasit"){
summary(temp1)
}
else if (input$code92 == "neoplasm") {
summary(temp2)
}
else if (input$code92 == "endocrine") {
summary(temp3)
}
else if ( input$code92 == "blood" )
summary(temp4)
else if (input$code92 == "mental") {
summary(temp5)
}
else if (input$code92 == "nervous") {
summary(temp6)
}
else if (input$code92 == "circulatory") {
summary(temp7)
}
else if (input$code92 == "respiratory") {
summary(temp8)
}
else if (input$code92 == "digestive") {
summary(temp9)
}
else if (input$code92 == "genitourinary") {
summary(temp10)
}
else if (input$code92 == "pregnancy") {
summary(temp11)
}
else if (input$code92 == "skin") {
summary(temp12)
}
else if (input$code92 == "muscle") {
summary(temp13)
}
else if (input$code92== "anomalies") {
summary(temp14)
}
else if (input$code92 == "perinatal") {
summary(temp15)
}
else if (input$code92 == "signs") {
summary(temp16)
}
else if (input$code92 == "poison") {
summary(temp17)
}
else if (input$code92 == "v1") {
summary(temp18)
}
else if (input$code92 == "v2") {
summary(temp19)
}
})
output$doentes <- DT::renderDataTable({
if ( input$code93 == "parasit")
DT::datatable(subset(infections139, select = -c(ROW_ID) ) )
else if (input$code93 == "neoplasm") {
DT::datatable(subset(neoplasms239, select = -c(ROW_ID) ))
}
else if (input$code93 == "endocrine") {
DT::datatable(subset(endocrine279, select = -c(ROW_ID) ))
}
else if ( input$code93 == "blood" )
DT::datatable(subset(blood289, select = -c(ROW_ID) ))
else if (input$code93 == "mental") {
DT::datatable(subset(mental319, select = -c(ROW_ID) ))
}
else if (input$code93 == "nervous") {
DT::datatable(subset(nervous389, select = -c(ROW_ID) ))
}
else if (input$code93 == "circulatory") {
DT::datatable(subset(circulatory459, select = -c(ROW_ID) ))
}
else if (input$code93 == "respiratory") {
DT::datatable(subset(respiratory519, select = -c(ROW_ID) ))
}
else if (input$code93 == "digestive") {
DT::datatable(subset(digestive579, select = -c(ROW_ID) ))
}
else if (input$code93 == "genitourinary") {
DT::datatable(subset(genitourinary629, select = -c(ROW_ID) ))
}
else if (input$code93 == "pregnancy") {
DT::datatable(subset(pregnancy679, select = -c(ROW_ID) ))
}
else if (input$code93 == "skin") {
DT::datatable(subset(skin709, select = -c(ROW_ID) ))
}
else if (input$code93 == "muscle") {
DT::datatable(subset(muscle739, select = -c(ROW_ID) ))
}
else if (input$code93== "anomalies") {
DT::datatable(subset(congenital759, select = -c(ROW_ID) ))
}
else if (input$code93 == "perinatal") {
DT::datatable(subset(perinatal779, select = -c(ROW_ID) ))
}
else if (input$code93 == "signs") {
DT::datatable(subset(symptoms799, select = -c(ROW_ID) ))
}
else if (input$code93 == "poison") {
DT::datatable(subset(injury999, select = -c(ROW_ID) ))
}
else if (input$code93 == "v1") {
DT::datatable(subset(v, select = -c(ROW_ID) ))
}
else if (input$code93 == "v2") {
DT::datatable(subset(e, select = -c(ROW_ID) ))
}
})
})
shinyApp(ui, server)
#TODO 04/7/2022
#ORDENAR POR SEQ NUMB
#CRIAR SEARCH BY PATIENT ID
#STATS DE DOEN?AS COM NUMERO 1 / HISTOGRAMA COM CORES
#DESCRICAO DOEN?A long title
#boxplot com len stay -> especific tab + grafico com varios para comparar
View(infections139)
View(ICUSTAYS)
View(DIAGNOSES_ICD)
View(temp2)
View(ADMISSIONS)
View(dfmerge)
View(dfmerge)
gato <- merge(ADMISSIONS, ICUSTAYS, by = "HADM_ID")
gato <- merge(ADMISSIONS, ICUSTAYS, by = "SUBJECT_ID")
gato <- merge(ADMISSIONS, ICUSTAYS, by = "ROW_ID")
