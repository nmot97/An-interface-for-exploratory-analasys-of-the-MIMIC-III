type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "neoplasm") {
counts <- as.data.frame(table(neoplasms239$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "parasit") {
counts <- as.data.frame(table(infections139$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "endocrine") {
counts <- as.data.frame(table(endocrine279$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "mental") {
counts <- as.data.frame(table(mental319$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "nervous") {
counts <- as.data.frame(table(nervous389$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "circulatory") {
counts <- as.data.frame(table(circulatory459$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "respiratory") {
counts <- as.data.frame(table(respiratory519$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "digestive") {
counts <- as.data.frame(table(digestive579$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "genitourinary") {
counts <- as.data.frame(table(genitourinary629$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "pregnancy") {
counts <- as.data.frame(table(pregnancy679$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "skin") {
counts <- as.data.frame(table(skin709$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "muscle") {
counts <- as.data.frame(table(muscle739$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "anomalies") {
counts <- as.data.frame(table(congenital759$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "perinatal") {
counts <- as.data.frame(table(perinatal779$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "signs") {
counts <- as.data.frame(table(symptoms799$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "poison") {
counts <- as.data.frame(table(injury999$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "v1") {
counts <- as.data.frame(table(v$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "v2") {
counts <- as.data.frame(table(e$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "Range of ICD9 Codes" ,
categoryorder = "total descending")
)
}
})
output$summary2 <- renderPrint({
if (input$code92 == "parasit"){
summary(temp1)
}
else if (input$code92 == "neoplasm") {
summary(temp2)
}
else if (input$code92 == "endocrine") {
summary(temp3)
}
else if ( input$code92 == "blood" )
summary(temp4)
else if (input$code92 == "mental") {
summary(temp5)
}
else if (input$code92 == "nervous") {
summary(temp6)
}
else if (input$code92 == "circulatory") {
summary(temp7)
}
else if (input$code92 == "respiratory") {
summary(temp8)
}
else if (input$code92 == "digestive") {
summary(temp9)
}
else if (input$code92 == "genitourinary") {
summary(temp10)
}
else if (input$code92 == "pregnancy") {
summary(temp11)
}
else if (input$code92 == "skin") {
summary(temp12)
}
else if (input$code92 == "muscle") {
summary(temp13)
}
else if (input$code92== "anomalies") {
summary(temp14)
}
else if (input$code92 == "perinatal") {
summary(temp15)
}
else if (input$code92 == "signs") {
summary(temp16)
}
else if (input$code92 == "poison") {
summary(temp17)
}
else if (input$code92 == "v1") {
summary(temp18)
}
else if (input$code92 == "v2") {
summary(temp19)
}
})
output$doentes <- DT::renderDataTable({
if ( input$code93 == "parasit")
DT::datatable(subset(infections139, select = -c(ROW_ID) ) )
else if (input$code93 == "neoplasm") {
DT::datatable(subset(neoplasms239, select = -c(ROW_ID) ))
}
else if (input$code93 == "endocrine") {
DT::datatable(subset(endocrine279, select = -c(ROW_ID) ))
}
else if ( input$code93 == "blood" )
DT::datatable(subset(blood289, select = -c(ROW_ID) ))
else if (input$code93 == "mental") {
DT::datatable(subset(mental319, select = -c(ROW_ID) ))
}
else if (input$code93 == "nervous") {
DT::datatable(subset(nervous389, select = -c(ROW_ID) ))
}
else if (input$code93 == "circulatory") {
DT::datatable(subset(circulatory459, select = -c(ROW_ID) ))
}
else if (input$code93 == "respiratory") {
DT::datatable(subset(respiratory519, select = -c(ROW_ID) ))
}
else if (input$code93 == "digestive") {
DT::datatable(subset(digestive579, select = -c(ROW_ID) ))
}
else if (input$code93 == "genitourinary") {
DT::datatable(subset(genitourinary629, select = -c(ROW_ID) ))
}
else if (input$code93 == "pregnancy") {
DT::datatable(subset(pregnancy679, select = -c(ROW_ID) ))
}
else if (input$code93 == "skin") {
DT::datatable(subset(skin709, select = -c(ROW_ID) ))
}
else if (input$code93 == "muscle") {
DT::datatable(subset(muscle739, select = -c(ROW_ID) ))
}
else if (input$code93== "anomalies") {
DT::datatable(subset(congenital759, select = -c(ROW_ID) ))
}
else if (input$code93 == "perinatal") {
DT::datatable(subset(perinatal779, select = -c(ROW_ID) ))
}
else if (input$code93 == "signs") {
DT::datatable(subset(symptoms799, select = -c(ROW_ID) ))
}
else if (input$code93 == "poison") {
DT::datatable(subset(injury999, select = -c(ROW_ID) ))
}
else if (input$code93 == "v1") {
DT::datatable(subset(v, select = -c(ROW_ID) ))
}
else if (input$code93 == "v2") {
DT::datatable(subset(e, select = -c(ROW_ID) ))
}
})
output$boxplotcompare <- renderPlotly({
fig <- plot_ly(
data = temp1,
y = ~LOS,
type = "box",
name= "001-139"
)
fig <- fig %>% add_trace(
data = temp2,
y = ~LOS,
type = "box",
name="140-239"
)
fig <- fig %>% add_trace(
data = temp3,
y = ~LOS,
type = "box",
name="240-279"
)
fig <- fig %>% add_trace(
data = temp4,
y = ~LOS,
type = "box",
name="280-289"
)
fig <- fig %>% add_trace(
data = temp5,
y = ~LOS,
type = "box",
name="290-319"
)
fig <- fig %>% add_trace(
data = temp6,
y = ~LOS,
type = "box",
name="320-389"
)
fig <- fig %>% add_trace(
data = temp7,
y = ~LOS,
type = "box",
name="390-459"
)
fig <- fig %>% add_trace(
data = temp8,
y = ~LOS,
type = "box",
name="460-519"
)
fig <- fig %>% add_trace(
data = temp9,
y = ~LOS,
type = "box",
name="520-579"
)
fig <- fig %>% add_trace(
data = temp10,
y = ~LOS,
type = "box",
name="580-629"
)
fig <- fig %>% add_trace(
data = temp11,
y = ~LOS,
type = "box",
name="630-679"
)
fig <- fig %>% add_trace(
data = temp12,
y = ~LOS,
type = "box",
name="680-709"
)
fig <- fig %>% add_trace(
data = temp13,
y = ~LOS,
type = "box",
name="710-739"
)
fig <- fig %>% add_trace(
data = temp14,
y = ~LOS,
type = "box",
name="740-759"
)
fig <- fig %>% add_trace(
data = temp15,
y = ~LOS,
type = "box",
name="760-779"
)
fig <- fig %>% add_trace(
data = temp16,
y = ~LOS,
type = "box",
name="780-799"
)
fig <- fig %>% add_trace(
data = temp17,
y = ~LOS,
type = "box",
name="800-999"
)
fig <- fig %>% add_trace(
data = temp18,
y = ~LOS,
type = "box",
name="V01-V89"
)
fig <- fig %>% add_trace(
data = temp19,
y = ~LOS,
type = "box",
name="E800-E999"
)
})
output$graficoICDS2 <-  renderPlotly({
plot_ly(
data = diagnosesPlot2,
x = ~ICD9CODE,
y = ~Frequency2,
type = "bar",
text = ~Frequency2,
textposition = "auto",
hoverinfo = "text",
hovertext = paste("IC9-Code:", diagnosesPlot2$ICD9CODE)
) %>%
layout(title= "Frequency of each ICD9 code"
)
})
updateSelectizeInput(session, "patid", choices = PATIENTS$SUBJECT_ID, server = T, selected = "2")
# observeEvent(input$buttonid,
#              {
#                updateSelectizeInput(session, "listid", selected = "Item 1234")
#              })
# output$patient_id <- renderTable({
#   filter( PATIENTS, SUBJECT_ID == "input$patid")
# })
output$patientid <- DT::renderDataTable({
DT::datatable( filter( dfmerge3, SUBJECT_ID == input$patid), options = list(scrollX = TRUE) )
})
updateSelectizeInput(session, "diagnose_patid", choices = PATIENTS$SUBJECT_ID, server = T, selected = "2")
updateSelectizeInput(session, "diagnose_icd", choices = D_ICD_DIAGNOSES$ICD9_CODE, server = T, selected = "0010")
output$diagnose_patientid <- DT::renderDataTable({
DT::datatable( filter( diagnoses_with_LOS, SUBJECT_ID == input$diagnose_patid), options = list(scrollX = TRUE) )
})
output$diagnose_icdcode <- DT::renderDataTable({
DT::datatable( filter( DIAGNOSES_ICD, ICD9_CODE == input$diagnose_icd), options = list(scrollX = TRUE) )
})
})
shinyApp(ui, server)
#TODO 18/7/2022
#COMPARAR PERCURSO DO DOENTE PARA UMA DOEN???A ( onde tenha muitos outliers). Um outlier vs poucos dias. 1 aleatorio.
# + grafico caregivers . Mostrar itens do paciente internado + numero de caregivers + exames?
#METER AGE NO SEARCH BY PATIENT ID
