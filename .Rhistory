layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "skin") {
counts <- as.data.frame(table(skin709$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "muscle") {
counts <- as.data.frame(table(muscle739$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "anomalies") {
counts <- as.data.frame(table(congenital759$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "perinatal") {
counts <- as.data.frame(table(perinatal779$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "signs") {
counts <- as.data.frame(table(symptoms799$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "poison") {
counts <- as.data.frame(table(injury999$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "v1") {
counts <- as.data.frame(table(v$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "ICD Code" ,
categoryorder = "total descending")
)
}
else if (input$code9 == "v2") {
counts <- as.data.frame(table(e$ICD9_CODE))
plot_ly(
data = counts,
x = ~Var1,
y=~Freq,
type = "bar"
) %>%
layout(title= "Frequency of each ICD9 ",
xaxis= list(title = "Range of ICD9 Codes" ,
categoryorder = "total descending")
)
}
})
output$summary2 <- renderPrint({
if (input$code92 == "parasit"){
bug_solver
}
else if (input$code92 == "neoplasm") {
summary(temp2)
}
else if (input$code92 == "endocrine") {
summary(temp3)
}
else if ( input$code92 == "blood" )
summary(temp4)
else if (input$code92 == "mental") {
summary(temp5)
}
else if (input$code92 == "nervous") {
summary(temp6)
}
else if (input$code92 == "circulatory") {
summary(temp7)
}
else if (input$code92 == "respiratory") {
summary(temp8)
}
else if (input$code92 == "digestive") {
summary(temp9)
}
else if (input$code92 == "genitourinary") {
summary(temp10)
}
else if (input$code92 == "pregnancy") {
summary(temp11)
}
else if (input$code92 == "skin") {
summary(temp12)
}
else if (input$code92 == "muscle") {
summary(temp13)
}
else if (input$code92== "anomalies") {
summary(temp14)
}
else if (input$code92 == "perinatal") {
summary(temp15)
}
else if (input$code92 == "signs") {
summary(temp16)
}
else if (input$code92 == "poison") {
summary(temp17)
}
else if (input$code92 == "v1") {
summary(temp18)
}
else if (input$code92 == "v2") {
summary(temp19)
}
})
output$doentes <- DT::renderDataTable({
if ( input$code93 == "parasit")
DT::datatable(subset(infections139, select = -c(ROW_ID) ) )
else if (input$code93 == "neoplasm") {
DT::datatable(subset(neoplasms239, select = -c(ROW_ID) ))
}
else if (input$code93 == "endocrine") {
DT::datatable(subset(endocrine279, select = -c(ROW_ID) ))
}
else if ( input$code93 == "blood" )
DT::datatable(subset(blood289, select = -c(ROW_ID) ))
else if (input$code93 == "mental") {
DT::datatable(subset(mental319, select = -c(ROW_ID) ))
}
else if (input$code93 == "nervous") {
DT::datatable(subset(nervous389, select = -c(ROW_ID) ))
}
else if (input$code93 == "circulatory") {
DT::datatable(subset(circulatory459, select = -c(ROW_ID) ))
}
else if (input$code93 == "respiratory") {
DT::datatable(subset(respiratory519, select = -c(ROW_ID) ))
}
else if (input$code93 == "digestive") {
DT::datatable(subset(digestive579, select = -c(ROW_ID) ))
}
else if (input$code93 == "genitourinary") {
DT::datatable(subset(genitourinary629, select = -c(ROW_ID) ))
}
else if (input$code93 == "pregnancy") {
DT::datatable(subset(pregnancy679, select = -c(ROW_ID) ))
}
else if (input$code93 == "skin") {
DT::datatable(subset(skin709, select = -c(ROW_ID) ))
}
else if (input$code93 == "muscle") {
DT::datatable(subset(muscle739, select = -c(ROW_ID) ))
}
else if (input$code93== "anomalies") {
DT::datatable(subset(congenital759, select = -c(ROW_ID) ))
}
else if (input$code93 == "perinatal") {
DT::datatable(subset(perinatal779, select = -c(ROW_ID) ))
}
else if (input$code93 == "signs") {
DT::datatable(subset(symptoms799, select = -c(ROW_ID) ))
}
else if (input$code93 == "poison") {
DT::datatable(subset(injury999, select = -c(ROW_ID) ))
}
else if (input$code93 == "v1") {
DT::datatable(subset(v, select = -c(ROW_ID) ))
}
else if (input$code93 == "v2") {
DT::datatable(subset(e, select = -c(ROW_ID) ))
}
})
output$boxplotcompare <- renderPlotly({
fig <- plot_ly(
data = temp1,
y = ~LOS,
type = "box",
name= "001-139"
)
fig <- fig %>% add_trace(
data = temp2,
y = ~LOS,
type = "box",
name="140-239"
)
fig <- fig %>% add_trace(
data = temp3,
y = ~LOS,
type = "box",
name="240-279"
)
fig <- fig %>% add_trace(
data = temp4,
y = ~LOS,
type = "box",
name="280-289"
)
fig <- fig %>% add_trace(
data = temp5,
y = ~LOS,
type = "box",
name="290-319"
)
fig <- fig %>% add_trace(
data = temp6,
y = ~LOS,
type = "box",
name="320-389"
)
fig <- fig %>% add_trace(
data = temp7,
y = ~LOS,
type = "box",
name="390-459"
)
fig <- fig %>% add_trace(
data = temp8,
y = ~LOS,
type = "box",
name="460-519"
)
fig <- fig %>% add_trace(
data = temp9,
y = ~LOS,
type = "box",
name="520-579"
)
fig <- fig %>% add_trace(
data = temp10,
y = ~LOS,
type = "box",
name="580-629"
)
fig <- fig %>% add_trace(
data = temp11,
y = ~LOS,
type = "box",
name="630-679"
)
fig <- fig %>% add_trace(
data = temp12,
y = ~LOS,
type = "box",
name="680-709"
)
fig <- fig %>% add_trace(
data = temp13,
y = ~LOS,
type = "box",
name="710-739"
)
fig <- fig %>% add_trace(
data = temp14,
y = ~LOS,
type = "box",
name="740-759"
)
fig <- fig %>% add_trace(
data = temp15,
y = ~LOS,
type = "box",
name="760-779"
)
fig <- fig %>% add_trace(
data = temp16,
y = ~LOS,
type = "box",
name="780-799"
)
fig <- fig %>% add_trace(
data = temp17,
y = ~LOS,
type = "box",
name="800-999"
)
fig <- fig %>% add_trace(
data = temp18,
y = ~LOS,
type = "box",
name="V01-V89"
)
fig <- fig %>% add_trace(
data = temp19,
y = ~LOS,
type = "box",
name="E800-E999"
)
})
output$graficoICDS2 <-  renderPlotly({
plot_ly(
data = diagnosesPlot2,
x = ~ICD9CODE,
y = ~Frequency2,
type = "bar",
text = ~Frequency2,
textposition = "auto",
hoverinfo = "text",
hovertext = paste("IC9-Code:", diagnosesPlot2$a)
) %>%
layout(title= "Frequency of each ICD9 code",
yaxis= list(title = "Days")
)
})
updateSelectizeInput(session, "patid", choices = PATIENTS$SUBJECT_ID, server = T, selected = "2")
# observeEvent(input$buttonid,
#              {
#                updateSelectizeInput(session, "listid", selected = "Item 1234")
#              })
# output$patient_id <- renderTable({
#   filter( PATIENTS, SUBJECT_ID == "input$patid")
# })
output$patientid <- DT::renderDataTable({
DT::datatable( filter( dfmerge3, SUBJECT_ID == input$patid), options = list(scrollX = TRUE) )
})
updateSelectizeInput(session, "diagnose_patid", choices = PATIENTS$SUBJECT_ID, server = T, selected = "2")
updateSelectizeInput(session, "diagnose_icd", choices = D_ICD_DIAGNOSES$ICD9_CODE, server = T, selected = "0010")
output$diagnose_patientid <- DT::renderDataTable({
temporario3 <- filter( diagnoses_with_LOS, SUBJECT_ID == input$diagnose_patid)
temporario3 <- subset (temporario3, select= -c(2))
DT::datatable( temporario3, options = list(scrollX = TRUE) )
})
output$diagnose_icdcode <- DT::renderDataTable({
temporario2 <-  filter( diagnoses_with_LOS, ICD9_CODE == input$diagnose_icd)
temporario2 <- subset (temporario2, select= -c(2))
DT::datatable( temporario2, options = list(scrollX = TRUE) )
})
output$summarydiagnoses5 <- renderPrint({
temporario <- left_join(diagnoses_with_LOS, dfmerge3, by = "SUBJECT_ID")
temporario <- subset (temporario, select= -c(HADM_ID.y))
summary(filter(temporario,ICD9_CODE == input$diagnose_icd) )
})
output$firstseqcompare <- DT::renderDataTable({
DT::datatable( firstseq_compare, options = list(scrollX = TRUE) )
})
updateSelectizeInput(session, "admission_id_input", choices = ADMISSIONS$HADM_ID, server = T)
output$admission_table <- DT::renderDataTable({
DT::datatable(  filter( subset(ADMISSIONS, select = -c(ROW_ID)) , HADM_ID == input$admission_id_input), options = list(scrollX = TRUE) )
})
output$icugrafico <-  renderPlotly({
plot_ly(
data = fully_filtered2(),
y = ~LOS,
type = "box",
name = "Length of stay"
) %>%
layout(title= "BoxPlot of LOS selected"
)
})
output$piegender <-  renderPlotly({
plot_ly(
count(df, GENDER),values=~n,labels=~factor(GENDER),
marker=list(colors=c("#89CFF0","#1B6AA1")),type="pie") %>%
layout(title= "Gender distribuiton"
)
})
output$pieethnicity <-  renderPlotly({
plot_ly(
count(df, ETHNICITY),values=~n,labels=~factor(ETHNICITY)
,type="pie") %>%
layout(title= "Ethnicity distribuiton"
)
})
output$mostfreqicd <-  renderPlotly({
plot_ly(
data = most_freq_icd,
x = ~ICD9_CODE,
y = ~n,
type = "bar",
text = ~n,
textposition = "auto",
hoverinfo = "text",
hovertext = paste("IC9-Code:", most_freq_icd$SHORT_TITLE)
) %>%
layout(title= "Top ten most frequent ICD-9 codes",
yaxis= list(title = "Frequency"  )
)
})
output$adms_each_patient <- DT::renderDataTable({
temporario <- filter( ADMISSIONS, SUBJECT_ID == input$patid)
temporario <- subset(temporario, select = -c(1))
DT::datatable( temporario, options = list(scrollX = TRUE) )
})
output$patgender <-  renderPlotly({
plot_ly(
count(fully_filtered(), ETHNICITY),values=~n,labels=~factor(ETHNICITY)
,type="pie") %>%
layout(title= "Ethnicity distribuiton", showlegend = F
)
})
output$patage <-  renderPlotly({
plot_ly(
data = fully_filtered(),
x = ~age,
type = "histogram"
) %>%
layout(title= "Histogram of Length of Stay",
xaxis= list(title = "Years" ),
yaxis= list(title = "Frequency")
)
})
output$icuidade <-  renderPlotly({
plot_ly(
data = fully_filtered2(),
x = ~age,
type = "histogram"
) %>%
layout(title= "Histogram of Age",
xaxis= list(title = "Years" ),
yaxis= list(title = "Frequency")
)
})
output$icufunit <-  renderPlotly({
plot_ly(
count(fully_filtered2(), FIRST_CAREUNIT),values=~n,labels=~factor(FIRST_CAREUNIT)
,type="pie") %>%
layout(title= "First Care Unit"
)
})
output$iculunit <-  renderPlotly({
plot_ly(
count(fully_filtered2(), LAST_CAREUNIT),values=~n,labels=~factor(LAST_CAREUNIT)
,type="pie") %>%
layout(title= "Last Care Unit"
)
})
output$patadmitype <-  renderPlotly({
plot_ly(
count(fully_filtered(), ADMISSION_TYPE),values=~n,labels=~factor(ADMISSION_TYPE)
,type="pie") %>%
layout(title= "Admission type"
)
})
output$patinsurance <-  renderPlotly({
plot_ly(
count(fully_filtered(), INSURANCE),values=~n,labels=~factor(INSURANCE)
,type="pie") %>%
layout(title= "Insurance type"
)
})
output$patadmloc <-  renderPlotly({
plot_ly(
count(fully_filtered(), ADMISSION_LOCATION),values=~n,labels=~factor(ADMISSION_LOCATION)
,type="pie") %>%
layout(title= "Admission Location"
)
})
output$patdisloc <-  renderPlotly({
plot_ly(
count(fully_filtered(), DISCHARGE_LOCATION),values=~n,labels=~factor(DISCHARGE_LOCATION)
,type="pie") %>%
layout(title= "Admission Location"
)
})
})
shinyApp(ui, server)
#TODO 18/7/2022
#COMPARAR PERCURSO DO DOENTE PARA UMA DOEN???A ( onde tenha muitos outliers). Um outlier vs poucos dias. 1 aleatorio.
# + grafico caregivers . Mostrar itens do paciente internado + numero de caregivers + exames?
#METER AGE NO SEARCH BY PATIENT ID
